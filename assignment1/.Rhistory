find.package("devtools")
find.package("devtools")
install.packages("devtools", dependencies = TRUE)
find.package("devtools")
install.package("devtools")
install.packages("devtools")
find_rtools()
find_rtools()
find.package("devtools")
install.packages("devtools")
find_rtools()
find_rtools(TRUE)
library(devtools)
find_rtools()
find_rtools(TRUE)
find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
omnitest(correctExpr='mydf <- read.csv(path2csv, stringsAsFactors = FALSE)')
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
"!is.na(c(3, 5, NA, 10))"
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
pack_sum
script_results_identical('pack_sum'); multi_expr_creates_var('pack_sum')
summarize(by_package, mean(size))
pack_sum
pack_sum
pack_sum
info
help
script_results_identical('pack_sum');
multi_expr_creates_var('pack_sum')
summarize(by_package, mean(size))
submit()
submit()
submit()
submit()
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
submit()
reset()
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
head(top_counts, 20)
arrange(top_counts, desc(count))
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
top_unique
arrange(top_unique, desc(unique))
submit()
submit()
submit()
submit()
submit()
submit()
submit()
swirl()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
q()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim()
library(dplyr)
dim(mydf)
head()
head(x)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
month(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
second(this_moment)
my_date <- ymd("1989-05-17")
my_date
my_date <-  ymd("1989-05-17")
my_date<-ymd("1989-05-17")
my_date<-ymd("1989-05-17")
library(lubridate)
my_date<-ymd("1989-05-17")
my_date<-ymd(1989-05-17)
my_date<-ymd(19890517)
my_date<-ymd(1989/05/17)
my_date<-ymd("1989/05/17")
?ymd
my_date <-  ymd("89-05-17")
my_date<-ymd("89-05-17")
my_date<-ymd("89-05-17",quiet = FALSE, tz = "UTC")
my_date <- ymd("1989-05-17")
my_date <- ymd("1989-05-17",quiet = FALSE, tz = "UTC",
locale = Sys.getlocale("LC_TIME"), truncated = 0)
my_date <- ymd("1989-05-17",quiet=FALSE,tz="UTC",locale=Sys.getlocale("LC_TIME"),truncated=0)
my_date <- ymd(1989,05,17)
my_date<-ymd(1989,05,17)
now()
info()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
this_day<-today()
this_day
day(this_day)
wday(this_day)
wday(this_day,label=TRUE)
this_moment<-now()
this_moment
hour(this_moment)
my_date<-ymd("1989-05-17")
info
my_date <- ymd("1989-05-17")
my_date <- ymd("19890517")
library(lubridate)
ymd()
ymd("1989-05-17")
system("locale -a")
x <- c("09-01-01", "09-01-02", "09-01-03")
my_date <- c("1989-05-17")
x <- c("1989-05-17")
my_date <- ymd(x)
x <- c("09-01-01", "09-01-02", "09-01-03")
ymd(x)
lubridate.verbose = TRUE
my_date <- ymd("1989-05-17")
info()
play()
library(lubridate)
today()
now()
ymd('1985-08-25')
ymd(c('2014-05-14', '2014-09-22'))
mdy('08.25.1985')
next()
nxt()
ymd("1989-05-17")
bye()
bye()
exit
q()
Sys.getlocale()
Encoding(x)
library(lubridate)
ymd("20110604")
library(reshape)
library(knitr)
library(plyr)
n1 <- n2 <- 9
x1 <- -3  ##treated
x2 <- 1  ##placebo
s1 <- 1.5  ##treated
s2 <- 1.8  ##placebo
spsq <- ( (n1 - 1) * s1^2 + (n2 - 1) * s2^2) / (n1 + n2 - 2)
t=(x1-x2)/(spsq*sqrt(1/n1 + 1/n2))
2*pt(t,n1+n2-2)
setwd("D:/Programming/GitHub/coursera-statinference/assignment1")
